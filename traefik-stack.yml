version: '3.8'

networks:
  traefik-public:
    external: true

volumes:
  traefik-storage: {}

services:
  # ========================================================================= #
  #                                 REVERSE PROXY
  # ========================================================================= #

  traefik:
    image: traefik:v2.4
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-storage:/certificates
    networks:
      - traefik-public
    environment:
      - TZ=${TZ}
    command:
      # Enable API + dashboard
      - --api.dashboard=true
      - --api.debug=true
      # Set log level (DEBUG, PANIC, FATAL, ERROR, WARN, INFO)
      - --log.level=PANIC
      # Enable metrics
      - --metrics.prometheus=true
      - --ping=true
      # Enable correct usage of timezone for logs
      - --accesslog.fields.names.StartUTC=drop
      # Docker settings
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik-public
      # Entrypoints http/https + redirection to  https
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      # LetsEncrypt certificates settings
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # Enable LetsEncrypt staging server
      # - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        traefik.enable: "true"
        traefik.docker.network: traefik-public
        traefik.http.middlewares.traefikauth.basicauth.users: ${BASIC_AUTH}
        traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN}`)
        traefik.http.routers.traefik.entrypoints: websecure
        traefik.http.routers.traefik.tls.certresolver: letsencrypt
        traefik.http.routers.traefik.service: api@internal
        traefik.http.routers.traefik.middlewares: traefikauth
        traefik.http.services.traefik.loadbalancer.server.port: 8080

  # THIS CONTAINER IS USED FOR DEBUGGING TRAEFIK !
  # whoami:
  #   image: containous/whoami
  #   networks:
  #     - traefik-public
  #   deploy:
  #     replicas: 1
  #     labels:
  #       traefik.enable: "true"
  #       traefik.docker.network: traefik-public
  #       traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN}`)
  #       traefik.http.routers.whoami.entrypoints: websecure
  #       traefik.http.routers.whoami.tls.certresolver: letsencrypt
  #       traefik.http.services.whoami.loadbalancer.server.port: 80